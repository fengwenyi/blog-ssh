<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 父上下文 包扫描 -->
    <context:component-scan base-package="com.xfsy.web.blog"></context:component-scan>


    <!-- 建立数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!-- 驱动 -->
        <property name="driverClassName">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <!-- 地址 -->
        <property name="url">
            <value>
                jdbc:mysql://localhost:3306/blog?useUnicode=true&amp;characterEncoding=UTF-8
            </value>
        </property>
        <!-- 数据库用户名 -->
        <property name="username">
            <value>root</value>
        </property>
        <!-- 数据库密码 -->
        <property name="password">
            <value>xfsy2017</value>
        </property>
    </bean>


    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <!-- 配置不同数据库的方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- 其实这个参数的作用主要用于：自动创建|更新|验证数据库表结构。如果不是此方面的需求建议set value="none".
其它几个参数的意思，我解释一下：
 validate               加载hibernate时，验证创建数据库表结构
 create                  每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。
 create-drop        加载hibernate时创建，退出是删除表结构
 update                 加载hibernate自动更新数据库结构 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!-- 是否显示sql语句 -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hiberante.format_sql">true</prop>
                <!--<prop key="connection.autocommit">true</prop>-->
            </props>
        </property>
        <property name="configLocations">
            <list>
                <value><!--读取和实体相关的xml-->
                    classpath:xfsy.hibernate.xml
                </value>
            </list>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>

    <bean id="adminDao" class="com.xfsy.web.blog.admin.dao.impl.AdminDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="adminService" class="com.xfsy.web.blog.admin.service.impl.AdminServiceImpl">
        <property name="adminDao" ref="adminDao"></property>
    </bean>

    <bean id="indexDao" class="com.xfsy.web.blog.index.dao.impl.IndexDaoImpl">
        <property name="index_sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="indexService" class="com.xfsy.web.blog.index.service.impl.IndexServideImpl">
        <property name="indexDao" ref="indexDao"></property>
    </bean>
</beans>